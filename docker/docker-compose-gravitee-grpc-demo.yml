version: '3.5'

networks:
  frontend:
    name: frontend
  storage:
    name: storage

volumes:
  data-elasticsearch:
  data-mongo:

services:
  mongodb:
    image: mongo:${MONGODB_VERSION:-5}
    command: [ "--quiet", "--logpath", "/dev/null" ]
    restart: always
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongo admin --quiet | grep 1
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - data-mongo:/data/db
      - ./.logs/apim-mongodb:/var/log/mongodb
    networks:
      - storage

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION:-8.6.2}
    restart: always
    volumes:
      - data-elasticsearch:/usr/share/elasticsearch/data
    environment:
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - xpack.security.enabled=false
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=5s" ]
      interval: 5s
      timeout: 3s
      retries: 10
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile: 65536
    networks:
      - storage

  gateway:
    image: graviteeio/apim-gateway:4.2.1
    restart: always
    ports:
      - "8082:8082"
      - "5005:5005"
    depends_on:
      elasticsearch:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    volumes:
      - ./.logs/apim-gateway:/opt/graviteeio-gateway/logs
      #- ./.license:/opt/graviteeio-gateway/license #uncomment if you use a licensed version of Gravitee and wnat to use the license
    environment:
      - JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - gravitee_management_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_ratelimit_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_reporters_elasticsearch_endpoints_0=http://elasticsearch:9200
      - gravitee_api_jupiterMode_enabled=true
      - gravitee_api_jupiterMode_default=always
      - gravitee_http_alpn=true
    networks:
      - storage
      - frontend

  management_api:
    image: graviteeio/apim-management-api:4.2.1
    restart: always
    ports:
      - "8083:8083"
    links:
      - mongodb
      - elasticsearch
    depends_on:
      elasticsearch:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    volumes:
      - ./.logs/apim-management-api:/opt/graviteeio-management-api/logs
      - ./.license:/opt/graviteeio-management-api/license
    environment:
      - gravitee_management_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_analytics_elasticsearch_endpoints_0=http://elasticsearch:9200
      - gravitee_api_jupiterMode_enabled=true
      - gravitee_api_jupiterMode_default=always
    networks:
      - storage
      - frontend

  management_ui:
    image: graviteeio/apim-management-ui:4.2.1
    restart: always
    ports:
      - "8084:8080"
    depends_on:
      - management_api
    environment:
      - MGMT_API_URL=http://localhost:8083/management/organizations/DEFAULT/environments/DEFAULT/
    volumes:
      - ./.logs/apim-management-ui:/var/log/nginx
    networks:
      - frontend

  portal_ui:
    image: graviteeio/apim-portal-ui:4.2.1
    restart: always
    ports:
      - "8085:8080"
    depends_on:
      - management_api
    environment:
      - PORTAL_API_URL=http://localhost:8083/portal/environments/DEFAULT
    volumes:
      - ./.logs/apim-portal-ui:/var/log/nginx
    networks:
      - frontend

  grpc-backend1:
    image: jgiovaresco/apim-samples:3.3.0 
#    ports:
#      - "8888:8888"
#      - "8892:8892"
    networks:
      - storage

  grpc-backend2:
    image: jgiovaresco/apim-samples:3.3.0
    networks:
      - storage
